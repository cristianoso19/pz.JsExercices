/*En este desaf칤o, debes encontrar al gatito m치s famoso con base en su n칰mero de seguidores.
Recibir치s un array de objetos que incluir치n las siguientes propiedades:
name: nombre del gatito.
followers: un array de n칰meros, donde cada uno representa los seguidores de cada red social.
Tu tarea es devolver un array con los nombres de los gatos que tienen solo el mayor n칰mero de seguidores. Si hay dos o m치s gatos con el mismo n칰mero m치ximo de seguidores, deber치s incluirlos en el array de resultado, manteniendo el orden en el que aparecen en el array de entrada.

Tendr치s inputs y outputs como los siguientes 游녢

Ejemplo 1:

Input: findFamousCats([
  {
    name: "Luna",
    followers: [500, 200, 300]
  },
  {
    name: "Michi",
    followers: [100, 300]
  },
])

Output: ["Luna"]

Ejemplo 2:

Input: findFamousCats([
  {
    name: "Mimi",
    followers: [320, 120, 70]
  },
  {
    name: "Milo",
    followers: [400, 300, 100, 200]
  },
  {
    name: "Gizmo",
    followers: [250, 750]
  }
])

Output: ["Milo", "Gizmo"]*/

function findFamousCats(cats) {
    // Tu c칩digo aqu칤 游녣
    sumFollowers = cats.map((cat) => {
        let sumFollowers = 0;

        cat.followers.forEach((followers) => {
            sumFollowers += followers;
        });

        cat.followers = sumFollowers;

        return cat;
    });

    let mostFamousCat = [];
    let mayor = sumFollowers[0].followers;
   
    sumFollowers.forEach((cat) => {
        if (mayor < cat.followers) {
            mostFamousCat =[];
            mostFamousCat.push(cat.name);
            mayor = cat.followers;
        } else if (mayor === cat.followers) {
            mostFamousCat.push(cat.name);
        }
    });

    console.log(mostFamousCat);
}

findFamousCats([
  {
    name: "Luna",
    followers: [500, 200, 300]
  },
  {
    name: "Michi",
    followers: [100, 300]
  },
])
findFamousCats([
  {
    name: "Mimi",
    followers: [320, 120, 70]
  },
  {
    name: "Milo",
    followers: [400, 300, 100, 200]
  },
  {
    name: "Gizmo",
    followers: [250, 750]
  }
])